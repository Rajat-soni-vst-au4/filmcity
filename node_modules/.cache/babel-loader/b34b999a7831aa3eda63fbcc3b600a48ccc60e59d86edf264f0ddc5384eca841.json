{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsoni/Desktop/Devon/filmcity/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MovieList from './components/MovieList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [retryTimer, setRetryTimer] = useState(null);\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-4961b-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ....Retrying!\");\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n      // Retry logic\n      const timer = setTimeout(fetchMovieHandler, 1000);\n      setRetryTimer(timer);\n      setRetryCount(prevRetryCount => prevRetryCount + 1);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n  const deleteMovieHandler = async movieId => {\n    try {\n      const response = await fetch(`https://react-4961b-default-rtdb.firebaseio.com/movies/${movieId}.json`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong while deleting the movie!');\n      }\n      setMovies(prevMovies => prevMovies.filter(movie => movie.id !== movieId));\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch('https://react-4961b-default-rtdb.firebaseio.com/movies.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong while adding the movie!');\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  // useEffect(() => {\n  //   if (retryCount === 0) return; // Skip initial retry\n\n  //   return () => {\n  //     clearTimeout(retryTimer); // Clear retry timer when component unmounts\n  //   };\n  // }, [retryCount, retryTimer]);\n\n  function cancelRetryHandler() {\n    clearTimeout(retryTimer);\n    setRetryCount(0);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 16\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      onDeleteMovie: deleteMovieHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        disabled: isLoading,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelRetryHandler,\n        disabled: !retryCount || isLoading,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GVvBCgwatvhhHBR4UFIgF23wAbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MovieList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","retryCount","setRetryCount","retryTimer","setRetryTimer","fetchMovieHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","timer","setTimeout","prevRetryCount","deleteMovieHandler","movieId","method","prevMovies","filter","movie","addMovieHandler","body","JSON","stringify","headers","console","log","cancelRetryHandler","clearTimeout","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onDeleteMovie","Fragment","onAddMovie","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rajatsoni/Desktop/Devon/filmcity/src/App.js"],"sourcesContent":["import React, { useState,useEffect,useCallback } from 'react';\nimport MovieList from './components/MovieList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [retryTimer, setRetryTimer] = useState(null);\n\n  \n\n const fetchMovieHandler=useCallback(async()=> {\n  setIsLoading(true)\n  setError(null);\n  try{\n   const response= await fetch('https://react-4961b-default-rtdb.firebaseio.com/movies.json')\n   if(!response.ok){\n    throw new Error(\"Something went wrong ....Retrying!\")\n  }\n    const data= await response.json();\n      \n      const loadedMovies=[];\n      for(const key in data){\n        loadedMovies.push({\n          id:key,\n          title:data[key].title,\n          openingText:data[key].openingText,\n          releaseDate:data[key].releaseDate,\n\n        })\n      }\n      \n        setMovies(loadedMovies);\n        \n      }catch(error){\n        setError(error.message)\n        // Retry logic\n      const timer = setTimeout(fetchMovieHandler, 1000);\n      setRetryTimer(timer);\n      setRetryCount((prevRetryCount) => prevRetryCount + 1);\n      }\n      setIsLoading(false);\n\n },[]);\n  useEffect(()=>{\n        fetchMovieHandler()\n  },[fetchMovieHandler]); \n  const deleteMovieHandler = async (movieId) => {\n    try {\n      const response = await fetch(\n        `https://react-4961b-default-rtdb.firebaseio.com/movies/${movieId}.json`,\n        {\n          method: 'DELETE',\n        }\n      );\n      if (!response.ok) {\n        throw new Error('Something went wrong while deleting the movie!');\n      }\n      setMovies((prevMovies) =>\n        prevMovies.filter((movie) => movie.id !== movieId)\n      );\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch(\n        'https://react-4961b-default-rtdb.firebaseio.com/movies.json',\n        {\n          method: 'POST',\n          body: JSON.stringify(movie),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error('Something went wrong while adding the movie!');\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n \n  // useEffect(() => {\n  //   if (retryCount === 0) return; // Skip initial retry\n\n  //   return () => {\n  //     clearTimeout(retryTimer); // Clear retry timer when component unmounts\n  //   };\n  // }, [retryCount, retryTimer]);\n\n  function cancelRetryHandler() {\n    clearTimeout(retryTimer);\n    setRetryCount(0);\n  }\n\n  let content =<p>found no movies.</p>\n  if(movies.length>0){\n    content=<MovieList movies={movies} onDeleteMovie={deleteMovieHandler} />\n  }\n  if(error){\n    content=<p>{error}</p>\n  }\n  if(isLoading){\n    content =<p>Loading....</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}/>\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler} disabled={isLoading}>Fetch Movies</button>\n        <button onClick={cancelRetryHandler} disabled={!retryCount || isLoading}>Cancel</button>\n      </section>\n      <section>\n         {/* {!isLoading && movies.length>0 && <MovieList movies={movies} />}\n         {!isLoading && movies.length==0 && !error && <p>Found no movies</p>}\n         {!isLoading && <p>{error}</p>}\n         {isLoading && <p>Loading....</p>} */}\n          {content}\n         </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}